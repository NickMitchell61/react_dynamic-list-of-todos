{"version":3,"sources":["types/StatusFilter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["StatusFilter","TodoList","todos","currentTodoId","setCurrentTodoId","className","map","todo","id","completed","title","isSelected","cn","type","onClick","TodoFilter","query","setQuery","setTodoFilter","onChange","event","target","value","All","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","currentTodo","useState","user","setUser","useEffect","userId","curUser","href","email","name","App","setTodos","todoFilter","visibleTodos","filter","matchesQuery","toLowerCase","trim","includes","Error","length","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5dbeb54.chunk.js","sourcesContent":["export enum StatusFilter {\n  All = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  currentTodoId: number | null,\n  setCurrentTodoId: (id: number | null) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  currentTodoId,\n  setCurrentTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          completed,\n          title,\n        } = todo;\n\n        const isSelected = id === currentTodoId;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': isSelected,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n\n            {completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setCurrentTodoId(\n                  isSelected ? null : todo.id,\n                )}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye-slash': isSelected,\n                    'fa-eye': !isSelected,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { ChangeEvent } from 'react';\nimport { StatusFilter } from '../../types/StatusFilter';\n\ninterface Props {\n  query: string,\n  setQuery: (input: React.SetStateAction<string>) => void,\n  setTodoFilter: (status: React.SetStateAction<StatusFilter>) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setTodoFilter,\n}) => {\n  const changeQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const clearQuery = () => setQuery('');\n\n  const changeFilter = (event: ChangeEvent<HTMLSelectElement>) => {\n    setTodoFilter(event.target.value as StatusFilter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={changeFilter}\n          >\n            <option value={StatusFilter.All}>All</option>\n            <option value={StatusFilter.ACTIVE}>Active</option>\n            <option value={StatusFilter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={changeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  currentTodo: Todo | null,\n  setCurrentTodoId: (id: number | null) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  currentTodo,\n  setCurrentTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId).then(curUser => {\n        setUser(curUser);\n      });\n    }\n  }, []);\n\n  if (!currentTodo) {\n    return null;\n  }\n\n  const {\n    completed,\n    id,\n    title,\n  } = currentTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setUser(null);\n                setCurrentTodoId(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { StatusFilter } from './types/StatusFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [currentTodoId, setCurrentTodoId] = useState<number | null>(null);\n  const [query, setQuery] = useState('');\n  const [todoFilter, setTodoFilter] = useState<StatusFilter>(StatusFilter.All);\n\n  useEffect(() => {\n    getTodos().then(todo => {\n      setTodos(todo);\n    });\n  }, []);\n\n  const visibleTodos = todos.filter(todo => {\n    const matchesQuery = todo.title.toLowerCase().trim()\n      .includes(query.toLowerCase().trim());\n\n    switch (todoFilter) {\n      case StatusFilter.All:\n        return todo && matchesQuery;\n\n      case StatusFilter.COMPLETED:\n        return todo.completed && matchesQuery;\n\n      case StatusFilter.ACTIVE:\n        return !todo.completed && matchesQuery;\n\n      default:\n        throw new Error(`Wrong filter, ${todoFilter} is not defined`);\n    }\n  });\n\n  const getCurrentTodo = (id: number) => {\n    return visibleTodos.find(todo => todo.id === id) || null;\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setTodoFilter={setTodoFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    currentTodoId={currentTodoId}\n                    setCurrentTodoId={setCurrentTodoId}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodoId && (\n        <TodoModal\n          currentTodo={getCurrentTodo(currentTodoId)}\n          setCurrentTodoId={setCurrentTodoId}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}